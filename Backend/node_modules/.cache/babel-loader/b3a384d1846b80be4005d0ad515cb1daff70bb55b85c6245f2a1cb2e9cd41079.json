{"ast":null,"code":"var _jsxFileName = \"/Users/adrianphuong/Desktop/Projects/diary-app/src/Diary.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Diary() {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [currentEntry, setCurrentEntry] = useState('');\n  const [entryCount, setEntryCount] = useState(0);\n  const [todaysDate, setTodaysDate] = useState(new Date().toLocaleString());\n  const [selectedEntry, setSelectedEntry] = useState(null);\n\n  // Function to fetch diary entries from the backend\n  const fetchEntries = async () => {\n    try {\n      const response = await axios.get('/api/entries');\n      setEntries(response.data);\n    } catch (error) {\n      console.error('Error fetching entries:', error);\n    }\n  };\n\n  // Function to create a new diary entry\n  const addEntry = async () => {\n    if (currentEntry.trim() !== '') {\n      try {\n        const newEntry = {\n          text: currentEntry,\n          date: new Date().toLocaleString(),\n          entryNumber: entryCount + 1\n        };\n        await axios.post('/api/entries', newEntry);\n        setCurrentEntry('');\n        setEntryCount(entryCount + 1);\n\n        // Fetch updated entries after creating a new one\n        fetchEntries();\n      } catch (error) {\n        console.error('Error creating entry:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    // Fetch initial entries when the component mounts\n    fetchEntries();\n    const updateTime = () => {\n      setTodaysDate(new Date().toLocaleString());\n    };\n    const intervalId = setInterval(updateTime, 1000);\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DayLog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: todaysDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"entryBox\",\n        children: entries.slice().reverse().map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"diary-entry\",\n          onClick: () => setSelectedEntry(entry),\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: entry.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Diary Entry #\", entry.entryNumber]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"17\",\n        placeholder: \"What's on your mind...?\",\n        value: currentEntry,\n        onChange: e => setCurrentEntry(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"entryButton\",\n        onClick: addEntry,\n        children: \"Add Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), selectedEntry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: selectedEntry.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedEntry.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setSelectedEntry(null),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(Diary, \"DuO8kthr141BS4GF+nz5YoXKZYI=\");\n_c = Diary;\nvar _c;\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Diary","_s","entries","setEntries","currentEntry","setCurrentEntry","entryCount","setEntryCount","todaysDate","setTodaysDate","Date","toLocaleString","selectedEntry","setSelectedEntry","fetchEntries","response","get","data","error","console","addEntry","trim","newEntry","text","date","entryNumber","post","updateTime","intervalId","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","className","slice","reverse","map","entry","index","onClick","rows","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/adrianphuong/Desktop/Projects/diary-app/src/Diary.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function Diary() {\n  const [entries, setEntries] = useState([]);\n  const [currentEntry, setCurrentEntry] = useState('');\n  const [entryCount, setEntryCount] = useState(0);\n  const [todaysDate, setTodaysDate] = useState(new Date().toLocaleString());\n  const [selectedEntry, setSelectedEntry] = useState(null);\n\n  // Function to fetch diary entries from the backend\n  const fetchEntries = async () => {\n    try {\n      const response = await axios.get('/api/entries');\n      setEntries(response.data);\n    } catch (error) {\n      console.error('Error fetching entries:', error);\n    }\n  };\n\n  // Function to create a new diary entry\n  const addEntry = async () => {\n    if (currentEntry.trim() !== '') {\n      try {\n        const newEntry = {\n          text: currentEntry,\n          date: new Date().toLocaleString(),\n          entryNumber: entryCount + 1,\n        };\n\n        await axios.post('/api/entries', newEntry);\n        setCurrentEntry('');\n        setEntryCount(entryCount + 1);\n\n        // Fetch updated entries after creating a new one\n        fetchEntries();\n      } catch (error) {\n        console.error('Error creating entry:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Fetch initial entries when the component mounts\n    fetchEntries();\n\n    const updateTime = () => {\n      setTodaysDate(new Date().toLocaleString());\n    };\n\n    const intervalId = setInterval(updateTime, 1000);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>DayLog</h1>\n      <h2>{todaysDate}</h2>\n      <div className=\"entry-form\">\n        <div className=\"entryBox\">\n          {entries.slice().reverse().map((entry, index) => (\n            <div key={index} className=\"diary-entry\" onClick={() => setSelectedEntry(entry)}>\n              <h3>{entry.date}</h3>\n              <p>Diary Entry #{entry.entryNumber}</p>\n            </div>\n          ))}\n        </div>\n        <textarea\n          rows=\"17\"\n          placeholder=\"What's on your mind...?\"\n          value={currentEntry}\n          onChange={(e) => setCurrentEntry(e.target.value)}\n        />\n        <button className=\"entryButton\" onClick={addEntry}>\n          Add Entry\n        </button>\n      </div>\n      {selectedEntry && (\n        <div className=\"selected-entry\">\n          <h3>{selectedEntry.date}</h3>\n          <p>{selectedEntry.text}</p>\n          <button onClick={() => setSelectedEntry(null)}>Close</button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}