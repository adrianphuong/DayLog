{"ast":null,"code":"var _jsxFileName = \"/Users/adrianphuong/Desktop/Projects/diary-app/src/Diary.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Diary() {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [currentEntry, setCurrentEntry] = useState('');\n  const addEntry = () => {\n    if (currentEntry.trim() !== '') {\n      setEntries([...entries, {\n        text: currentEntry,\n        date: new Date().toLocaleString()\n      }]);\n      setCurrentEntry('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"diary\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"DayLog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        rows: \"5\",\n        placeholder: \"Write your entry...\",\n        value: currentEntry,\n        onChange: e => setCurrentEntry(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addEntry,\n        children: \"Add Entry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diary-entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: entry.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: entry.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Diary, \"fDSfzVZLRwsymGhCO1lLTFUv9YY=\");\n_c = Diary;\nvar _c;\n$RefreshReg$(_c, \"Diary\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Diary","_s","entries","setEntries","currentEntry","setCurrentEntry","addEntry","trim","text","date","Date","toLocaleString","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rows","placeholder","value","onChange","e","target","onClick","map","entry","index","_c","$RefreshReg$"],"sources":["/Users/adrianphuong/Desktop/Projects/diary-app/src/Diary.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles.css';\n\nexport default function Diary() {\n  const [entries, setEntries] = useState([]);\n  const [currentEntry, setCurrentEntry] = useState('');\n\n  const addEntry = () => {\n    if (currentEntry.trim() !== '') {\n      setEntries([...entries, { text: currentEntry, date: new Date().toLocaleString() }]);\n      setCurrentEntry('');\n    }\n  };\n\n  return (\n    <div className=\"diary\">\n      <h1>DayLog</h1>\n      <div className=\"entry-form\">\n        <textarea\n          rows=\"5\"\n          placeholder=\"Write your entry...\"\n          value={currentEntry}\n          onChange={(e) => setCurrentEntry(e.target.value)}\n        />\n        <button onClick={addEntry}>Add Entry</button>\n      </div>\n      {entries.map((entry, index) => (\n        <div key={index} className=\"diary-entry\">\n          <h3>{entry.date}</h3>\n          <p>{entry.text}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIF,YAAY,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC9BJ,UAAU,CAAC,CAAC,GAAGD,OAAO,EAAE;QAAEM,IAAI,EAAEJ,YAAY;QAAEK,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC;MAAE,CAAC,CAAC,CAAC;MACnFN,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKa,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBd,OAAA;MAAAc,QAAA,EAAI;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACflB,OAAA;MAAKa,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACzBd,OAAA;QACEmB,IAAI,EAAC,GAAG;QACRC,WAAW,EAAC,qBAAqB;QACjCC,KAAK,EAAEhB,YAAa;QACpBiB,QAAQ,EAAGC,CAAC,IAAKjB,eAAe,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACFlB,OAAA;QAAQyB,OAAO,EAAElB,QAAS;QAAAO,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,EACLf,OAAO,CAACuB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACxB5B,OAAA;MAAiBa,SAAS,EAAC,aAAa;MAAAC,QAAA,gBACtCd,OAAA;QAAAc,QAAA,EAAKa,KAAK,CAACjB;MAAI;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBlB,OAAA;QAAAc,QAAA,EAAIa,KAAK,CAAClB;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GAFXU,KAAK;MAAAb,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAAChB,EAAA,CA/BuBD,KAAK;AAAA4B,EAAA,GAAL5B,KAAK;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}